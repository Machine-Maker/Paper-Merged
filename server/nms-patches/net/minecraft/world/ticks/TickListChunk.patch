--- a/net/minecraft/world/ticks/TickListChunk.java
+++ b/net/minecraft/world/ticks/TickListChunk.java
@@ -10,12 +10,16 @@
 import net.minecraft.nbt.NBTTagList;
 import net.minecraft.world.level.ChunkCoordIntPair;
 
-final class TickListChunk extends Record {
+// CraftBukkit start
+final record TickListChunk<T>(T type, BlockPosition pos, int delay, TickListPriority priority) {
 
+    /*
     private final T type;
     private final BlockPosition pos;
     private final int delay;
     private final TickListPriority priority;
+     */
+    // CraftBukkit end
     private static final String TAG_ID = "i";
     private static final String TAG_X = "x";
     private static final String TAG_Y = "y";
@@ -32,12 +36,16 @@
         }
     };
 
+    // CraftBukkit start
+    /*
     TickListChunk(T t0, BlockPosition blockposition, int i, TickListPriority ticklistpriority) {
         this.type = t0;
         this.pos = blockposition;
         this.delay = i;
         this.priority = ticklistpriority;
     }
+     */
+    // CraftBukkit end
 
     public static <T> void loadTickList(NBTTagList nbttaglist, Function<String, Optional<T>> function, ChunkCoordIntPair chunkcoordintpair, Consumer<TickListChunk<T>> consumer) {
         long i = chunkcoordintpair.toLong();
@@ -85,6 +93,8 @@
         return new TickListChunk(t0, blockposition, 0, TickListPriority.NORMAL);
     }
 
+    // CraftBukkit start
+    /*
     public final String toString() {
         return this.toString < invokedynamic > (this);
     }
@@ -112,4 +122,6 @@
     public TickListPriority priority() {
         return this.priority;
     }
+     */
+    // CraftBukkit end
 }
