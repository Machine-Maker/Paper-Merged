--- a/net/minecraft/world/entity/animal/horse/EntityHorseAbstract.java
+++ b/net/minecraft/world/entity/animal/horse/EntityHorseAbstract.java
@@ -70,6 +70,8 @@
 import net.minecraft.world.phys.AxisAlignedBB;
 import net.minecraft.world.phys.Vec3D;
 
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason; // CraftBukkit
+
 public abstract class EntityHorseAbstract extends EntityAnimal implements IInventoryListener, IJumpable, ISaddleable {
 
     public static final int EQUIPMENT_SLOT_OFFSET = 400;
@@ -109,6 +111,7 @@
     private float mouthAnimO;
     protected boolean canGallop = true;
     protected int gallopSoundCounter;
+    public int maxDomestication = 100; // CraftBukkit - store max domestication value
 
     protected EntityHorseAbstract(EntityTypes<? extends EntityHorseAbstract> entitytypes, World world) {
         super(entitytypes, world);
@@ -293,7 +296,7 @@
     public void loadChest() {
         InventorySubcontainer inventorysubcontainer = this.inventory;
 
-        this.inventory = new InventorySubcontainer(this.getChestSlots());
+        this.inventory = new InventorySubcontainer(this.getChestSlots(), (org.bukkit.entity.AbstractHorse) this.getBukkitEntity()); // CraftBukkit
         if (inventorysubcontainer != null) {
             inventorysubcontainer.b((IInventoryListener) this);
             int i = Math.min(inventorysubcontainer.getSize(), this.inventory.getSize());
@@ -409,7 +412,7 @@
     }
 
     public int getMaxDomestication() {
-        return 100;
+        return this.maxDomestication; // CraftBukkit - return stored max domestication instead of 100
     }
 
     @Override
@@ -479,7 +482,7 @@
         }
 
         if (this.getHealth() < this.getMaxHealth() && f > 0.0F) {
-            this.heal(f);
+            this.heal(f, RegainReason.EATING); // CraftBukkit
             flag = true;
         }
 
@@ -556,7 +559,7 @@
         super.movementTick();
         if (!this.level.isClientSide && this.isAlive()) {
             if (this.random.nextInt(900) == 0 && this.deathTime == 0) {
-                this.heal(1.0F);
+                this.heal(1.0F, RegainReason.REGEN); // CraftBukkit
             }
 
             if (this.fU()) {
@@ -794,6 +797,7 @@
         if (this.getOwnerUUID() != null) {
             nbttagcompound.a("Owner", this.getOwnerUUID());
         }
+        nbttagcompound.setInt("Bukkit.MaxDomestication", this.maxDomestication); // CraftBukkit
 
         if (!this.inventory.getItem(0).isEmpty()) {
             nbttagcompound.set("SaddleItem", this.inventory.getItem(0).save(new NBTTagCompound()));
@@ -821,6 +825,11 @@
         if (uuid != null) {
             this.setOwnerUUID(uuid);
         }
+        // CraftBukkit start
+        if (nbttagcompound.hasKey("Bukkit.MaxDomestication")) {
+            this.maxDomestication = nbttagcompound.getInt("Bukkit.MaxDomestication");
+        }
+        // CraftBukkit end
 
         if (nbttagcompound.hasKeyOfType("SaddleItem", 10)) {
             ItemStack itemstack = ItemStack.a(nbttagcompound.getCompound("SaddleItem"));
@@ -903,6 +912,18 @@
 
     @Override
     public void b(int i) {
+        // CraftBukkit start
+        float power;
+        if (i >= 90) {
+            power = 1.0F;
+        } else {
+            power = 0.4F + 0.4F * (float) i / 90.0F;
+        }
+        org.bukkit.event.entity.HorseJumpEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callHorseJumpEvent(this, power);
+        if (event.isCancelled()) {
+            return;
+        }
+        // CraftBukkit end
         this.allowStandSliding = true;
         this.fD();
         this.fW();
