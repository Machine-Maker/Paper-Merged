From cb298e1afa07a0d85f25816443b6f6e413918dff Mon Sep 17 00:00:00 2001
From: md_5 <git@md-5.net>
Date: Thu, 26 Jan 2017 21:50:51 +0000
Subject: [PATCH] Highly Optimized Tick Loop


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 412845f57..de58e7eab 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -278,6 +278,12 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
     public CommandDispatcher vanillaCommandDispatcher;
     private boolean forceTicks;
     // CraftBukkit end
+    // Spigot start
+    public static final int TPS = 20;
+    public static final int TICK_TIME = 1000000000 / TPS;
+    private static final int SAMPLE_INTERVAL = 100;
+    public final double[] recentTps = new double[ 3 ];
+    // Spigot end
 
     public static <S extends MinecraftServer> S spin(Function<Thread, S> function) {
         AtomicReference<S> atomicreference = new AtomicReference();
@@ -942,6 +948,13 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
 
     }
 
+    // Spigot Start
+    private static double calcTps(double avg, double exp, double tps)
+    {
+        return ( avg * exp ) + ( tps * ( 1 - exp ) );
+    }
+    // Spigot End
+
     protected void runServer() {
         try {
             if (!this.initServer()) {
@@ -954,8 +967,11 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
             this.status.setPreviewsChat(this.previewsChat());
             this.updateStatusIcon(this.status);
 
+            // Spigot start
+            Arrays.fill( recentTps, 20 );
+            long curTime, tickSection = SystemUtils.getMillis(), tickCount = 1;
             while (this.running) {
-                long i = SystemUtils.getMillis() - this.nextTickTime;
+                long i = (curTime = SystemUtils.getMillis()) - this.nextTickTime;
 
                 if (i > 5000L && this.nextTickTime - this.lastOverloadWarning >= 30000L) { // CraftBukkit
                     long j = i / 50L;
@@ -966,6 +982,16 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
                     this.lastOverloadWarning = this.nextTickTime;
                 }
 
+                if ( tickCount++ % SAMPLE_INTERVAL == 0 )
+                {
+                    double currentTps = 1E3 / ( curTime - tickSection ) * SAMPLE_INTERVAL;
+                    recentTps[0] = calcTps( recentTps[0], 0.92, currentTps ); // 1/exp(5sec/1min)
+                    recentTps[1] = calcTps( recentTps[1], 0.9835, currentTps ); // 1/exp(5sec/5min)
+                    recentTps[2] = calcTps( recentTps[2], 0.9945, currentTps ); // 1/exp(5sec/15min)
+                    tickSection = curTime;
+                }
+                // Spigot end
+
                 if (this.debugCommandProfilerDelayStart) {
                     this.debugCommandProfilerDelayStart = false;
                     this.debugCommandProfiler = new MinecraftServer.TimeProfiler(SystemUtils.getNanos(), this.tickCount);
-- 
2.37.0

