--- a/net/minecraft/server/EntityZombie.java
+++ b/net/minecraft/server/EntityZombie.java
@@ -9,6 +9,15 @@
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.Zombie;
+import org.bukkit.event.entity.CreatureSpawnEvent;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.EntityTransformEvent;
+// CraftBukkit end
+
 public class EntityZombie extends EntityMonster {
 
     private static final UUID b = UUID.fromString("B9766B59-9566-4402-BC1F-2EE2A276D836");
@@ -23,6 +32,7 @@
     private boolean bz;
     private int bA;
     public int drownedConversionTime;
+    private int lastTick = MinecraftServer.currentTick; // CraftBukkit - add field
 
     public EntityZombie(EntityTypes<? extends EntityZombie> entitytypes, World world) {
         super(entitytypes, world);
@@ -138,7 +148,10 @@
     public void tick() {
         if (!this.world.isClientSide && this.isAlive() && !this.isNoAI()) {
             if (this.isDrownConverting()) {
-                --this.drownedConversionTime;
+                // CraftBukkit start - Use wall time instead of ticks for conversion
+                int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
+                this.drownedConversionTime -= elapsedTicks;
+                // CraftBukkit end
                 if (this.drownedConversionTime < 0) {
                     this.eQ();
                 }
@@ -155,6 +168,7 @@
         }
 
         super.tick();
+        this.lastTick = MinecraftServer.currentTick; // CraftBukkit
     }
 
     @Override
@@ -187,6 +201,7 @@
     }
 
     public void startDrownedConversion(int i) {
+        this.lastTick = MinecraftServer.currentTick; // CraftBukkit
         this.drownedConversionTime = i;
         this.getDataWatcher().set(EntityZombie.DROWN_CONVERTING, true);
     }
@@ -206,6 +221,7 @@
             entityzombie.u(entityzombie.world.getDamageScaler(entityzombie.getChunkCoordinates()).d());
             entityzombie.u(entityzombie.eL() && this.eV());
         }
+        else { ((Zombie) getBukkitEntity()).setConversionTime(-1); } // SPIGOT-5208: End conversion to stop event spam
 
     }
 
@@ -239,8 +255,8 @@
                     if (SpawnerCreature.a(entitypositiontypes_surface, (IWorldReader) this.world, blockposition, entitytypes) && EntityPositionTypes.a(entitytypes, this.world, EnumMobSpawn.REINFORCEMENT, blockposition, this.world.random)) {
                         entityzombie.setPosition((double) i1, (double) j1, (double) k1);
                         if (!this.world.isPlayerNearby((double) i1, (double) j1, (double) k1, 7.0D) && this.world.i(entityzombie) && this.world.getCubes(entityzombie) && !this.world.containsLiquid(entityzombie.getBoundingBox())) {
-                            this.world.addEntity(entityzombie);
-                            entityzombie.setGoalTarget(entityliving);
+                            this.world.addEntity(entityzombie, CreatureSpawnEvent.SpawnReason.REINFORCEMENTS); // CraftBukkit
+                            entityzombie.setGoalTarget(entityliving, EntityTargetEvent.TargetReason.REINFORCEMENT_TARGET, true); // CraftBukkit
                             entityzombie.prepare(this.world, this.world.getDamageScaler(entityzombie.getChunkCoordinates()), EnumMobSpawn.REINFORCEMENT, (GroupDataEntity) null, (NBTTagCompound) null);
                             this.getAttributeInstance(GenericAttributes.SPAWN_REINFORCEMENTS).addModifier(new AttributeModifier("Zombie reinforcement caller charge", -0.05000000074505806D, AttributeModifier.Operation.ADDITION));
                             entityzombie.getAttributeInstance(GenericAttributes.SPAWN_REINFORCEMENTS).addModifier(new AttributeModifier("Zombie reinforcement callee charge", -0.05000000074505806D, AttributeModifier.Operation.ADDITION));
@@ -264,7 +280,14 @@
             float f = this.world.getDamageScaler(this.getChunkCoordinates()).b();
 
             if (this.getItemInMainHand().isEmpty() && this.isBurning() && this.random.nextFloat() < f * 0.3F) {
-                entity.setOnFire(2 * (int) f);
+                // CraftBukkit start
+                EntityCombustByEntityEvent event = new EntityCombustByEntityEvent(this.getBukkitEntity(), entity.getBukkitEntity(), 2 * (int) f); // PAIL: fixme
+                this.world.getServer().getPluginManager().callEvent(event);
+
+                if (!event.isCancelled()) {
+                    entity.setOnFire(event.getDuration(), false);
+                }
+                // CraftBukkit end
             }
         }
 
@@ -354,7 +377,7 @@
             EntityZombieVillager entityzombievillager = (EntityZombieVillager) EntityTypes.ZOMBIE_VILLAGER.a(this.world);
 
             entityzombievillager.u(entityvillager);
-            entityvillager.die();
+            // entityvillager.die(); // CraftBukkit - moved down
             entityzombievillager.prepare(this.world, this.world.getDamageScaler(entityzombievillager.getChunkCoordinates()), EnumMobSpawn.CONVERSION, new EntityZombie.GroupDataZombie(false, true), (NBTTagCompound) null);
             entityzombievillager.setVillagerData(entityvillager.getVillagerData());
             entityzombievillager.a((NBTBase) entityvillager.fj().a((DynamicOps) DynamicOpsNBT.a).getValue());
@@ -372,7 +395,13 @@
             }
 
             entityzombievillager.setInvulnerable(this.isInvulnerable());
-            this.world.addEntity(entityzombievillager);
+            // CraftBukkit start
+            if (CraftEventFactory.callEntityTransformEvent(this, entityzombievillager, EntityTransformEvent.TransformReason.INFECTION).isCancelled()) {
+                return;
+            }
+            entityvillager.die(); // CraftBukkit - from above
+            this.world.addEntity(entityzombievillager, CreatureSpawnEvent.SpawnReason.INFECTION); // CraftBukkit - add SpawnReason
+            // CraftBukkit end
             if (!this.isSilent()) {
                 this.world.a((EntityHuman) null, 1026, this.getChunkCoordinates(), 0);
             }
@@ -423,7 +452,7 @@
                         entitychicken1.prepare(generatoraccess, difficultydamagescaler, EnumMobSpawn.JOCKEY, (GroupDataEntity) null, (NBTTagCompound) null);
                         entitychicken1.setChickenJockey(true);
                         this.startRiding(entitychicken1);
-                        generatoraccess.addEntity(entitychicken1);
+                        generatoraccess.addEntity(entitychicken1, CreatureSpawnEvent.SpawnReason.MOUNT); // CraftBukkit
                     }
                 }
             }
